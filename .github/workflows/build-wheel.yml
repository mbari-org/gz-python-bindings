name: Build & Release Wheel

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: '3.12'

    steps:
      - name: Checkout code (with submodules)
        uses: actions/checkout@v3
        with:
          submodules: recursive

      # Install ROS 2 and Gazebo
      - name: Setup ROS 2 Jazzy apt repo
        run: |
          sudo apt update && sudo apt install -y software-properties-common curl gnupg lsb-release
          sudo add-apt-repository universe
          sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \
            -o /usr/share/keyrings/ros-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \
            http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" \
            | sudo tee /etc/apt/sources.list.d/ros2-jazzy.list

      - name: Install ROS 2 Jazzy & Colcon
        run: |
          sudo apt update
          sudo apt install -y \
            ros-jazzy-ros-base \
            python3-colcon-common-extensions \
            ros-jazzy-ament-cmake-vendor-package \
            ros-jazzy-gz-sim-vendor \
            ros-jazzy-gz-math-vendor

      # Build gz math and sim vendor python bindings
      - name: Build math & sim with Colcon
        run: |
          source /opt/ros/jazzy/setup.bash && \
          colcon build --allow-overriding gz_sim_vendor gz_math_vendor --packages-select gz_sim_vendor gz_math_vendor

      - name: Prepare wheel package dir
        run: |
          cp install/gz_math_vendor/opt/gz_math_vendor/lib/python/gz/*.so \
             wheel_pkg/gz/.

      - name: Verify .so contains PyInit_* before packaging
        run: |
          ls wheel_pkg/gz/*.so
          for sofile in wheel_pkg/gz/*.so; do
            echo "Checking $sofile"
            nm -D "$sofile" | grep PyInit
          done

      # Turn it into a whl
      - name: Build wheel
        working-directory: wheel_pkg
        run: |
          python${{ env.PYTHON_VERSION }} -m pip install --upgrade build
          python${{ env.PYTHON_VERSION }} -m build --wheel
          python3 -m wheel tags --remove \
            --python-tag cp312 \
            --abi-tag cp312 \
            --platform-tag manylinux_2_39_x86_64 \
            dist/*.whl

      # Release it
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body: Automated wheel for ${{ github.ref }}
          files: wheel_pkg/dist/*.whl

      - name: Smoke test for gz bindings
        run: |
          python${{ env.PYTHON_VERSION }} -m venv testenv
          source testenv/bin/activate
          python -m pip install wheel_pkg/dist/*.whl
          source /opt/ros/jazzy/setup.bash && \
          python -c "import gz; import gz.math7; import gz.sim8; import gz.common5; print('All gz modules imported OK')"

      # Set up gh pages to work as a simple pypi index for pip install
      - name: Checkout gh-pages branch
        uses: actions/checkout@v3
        with:
          # Assumes gh-pages branch already exists
          ref: gh-pages
          path: gh-pages

      - name: Copy new wheel into PyPI index folder
        run: |
          # Find the built wheel filename
          WHEEL_FILE=$(basename wheel_pkg/dist/*.whl)
          # Prepare simple index path under gh-pages
          mkdir -p gh-pages/simple/gz-python-bindings
          # Copy the wheel into the index directory
          cp wheel_pkg/dist/${WHEEL_FILE} gh-pages/simple/gz-python-bindings/

      - name: Regenerate index.html for gz-python-bindings
        run: |
          IDX_DIR=gh-pages/simple/gz-python-bindings
          # Generate an index.html listing all .whl files in that directory
          {
            echo "<html><body>"
            for f in "$IDX_DIR"/*.whl; do
              fname=$(basename "$f")
              # link URL is relative, so pip will resolve as <base_url>/simple/gz-python-bindings/<fname>
              echo "  <a href=\"${fname}\">${fname}</a><br/>"
            done
            echo "</body></html>"
          } > "$IDX_DIR/index.html"

      - name: Commit and push index updates
        run: |
          cd gh-pages
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Stage the new wheel and updated index.html
          git add simple/gz-python-bindings/
          # Use the tag name (strip "refs/tags/")
          VER=${GITHUB_REF#refs/tags/}
          # Commit (if there are changes)
          if ! git diff --cached --quiet; then
            git commit -m "Update PyPI index for gz-python-bindings ${VER}"
            git push origin gh-pages
          else
            echo "No changes to gh-pages; skipping commit."
          fi
